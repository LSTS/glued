diff -Nru eglibc-2.15.17955/libc/elf/dl-close.c eglibc-2.15.17955.rasm/libc/elf/dl-close.c
--- eglibc-2.15.17955/libc/elf/dl-close.c	2012-04-07 20:58:55.000000000 +0100
+++ eglibc-2.15.17955.rasm/libc/elf/dl-close.c	2012-10-23 22:33:33.351846745 +0100
@@ -119,17 +119,8 @@
   if (map->l_direct_opencount > 0 || map->l_type != lt_loaded
       || dl_close_state != not_pending)
     {
-      if (map->l_direct_opencount == 0)
-	{
-	  if (map->l_type == lt_loaded)
-	    dl_close_state = rerun;
-	  else if (map->l_type == lt_library)
-	    {
-	      struct link_map **oldp = map->l_initfini;
-	      map->l_initfini = map->l_orig_initfini;
-	      _dl_scope_free (oldp);
-	    }
-	}
+      if (map->l_direct_opencount == 0 && map->l_type == lt_loaded)
+        dl_close_state = rerun;
 
       /* There are still references to this object.  Do nothing more.  */
       if (__builtin_expect (GLRO_dl_debug_mask & DL_DEBUG_FILES, 0))
diff -Nru eglibc-2.15.17955/libc/elf/dl-deps.c eglibc-2.15.17955.rasm/libc/elf/dl-deps.c
--- eglibc-2.15.17955/libc/elf/dl-deps.c	2012-04-07 20:58:55.000000000 +0100
+++ eglibc-2.15.17955.rasm/libc/elf/dl-deps.c	2012-10-23 22:38:17.124208092 +0100
@@ -689,6 +689,7 @@
   l_initfini[nlist] = NULL;
   atomic_write_barrier ();
   map->l_initfini = l_initfini;
+  map->l_free_initfini = 1;
   if (l_reldeps != NULL)
     {
       atomic_write_barrier ();
@@ -697,7 +698,7 @@
       _dl_scope_free (old_l_reldeps);
     }
   if (old_l_initfini != NULL)
-      map->l_orig_initfini = old_l_initfini;
+    _dl_scope_free (old_l_initfini);
 
   if (errno_reason)
     _dl_signal_error (errno_reason == -1 ? 0 : errno_reason, objname,
diff -Nru eglibc-2.15.17955/libc/elf/dl-libc.c eglibc-2.15.17955.rasm/libc/elf/dl-libc.c
--- eglibc-2.15.17955/libc/elf/dl-libc.c	2012-04-07 20:58:55.000000000 +0100
+++ eglibc-2.15.17955.rasm/libc/elf/dl-libc.c	2012-10-23 22:39:02.388449874 +0100
@@ -270,13 +270,13 @@
 
   for (Lmid_t ns = 0; ns < GL(dl_nns); ++ns)
     {
-      /* Remove all additional names added to the objects.  */
       for (l = GL(dl_ns)[ns]._ns_loaded; l != NULL; l = l->l_next)
 	{
 	  struct libname_list *lnp = l->l_libname->next;
 
 	  l->l_libname->next = NULL;
 
+          /* Remove all additional names added to the objects.  */
 	  while (lnp != NULL)
 	    {
 	      struct libname_list *old = lnp;
@@ -284,6 +284,10 @@
 	      if (! old->dont_free)
 		free (old);
 	    }
+
+          /* Free the initfini dependency list.  */
+          if (l->l_free_initfini)
+            free (l->l_initfini);
 	}
 
       if (__builtin_expect (GL(dl_ns)[ns]._ns_global_scope_alloc, 0) != 0
diff -Nru eglibc-2.15.17955/libc/elf/rtld.c eglibc-2.15.17955.rasm/libc/elf/rtld.c
--- eglibc-2.15.17955/libc/elf/rtld.c	2012-04-07 20:58:55.000000000 +0100
+++ eglibc-2.15.17955.rasm/libc/elf/rtld.c	2012-10-23 22:39:30.692348894 +0100
@@ -2277,6 +2277,8 @@
 	      lnp->dont_free = 1;
 	      lnp = lnp->next;
 	    }
+          /* Also allocated with the fake malloc().  */
+          l->l_free_initfini = 0;
 
 	  if (l != &GL(dl_rtld_map))
 	    _dl_relocate_object (l, l->l_scope, GLRO(dl_lazy) ? RTLD_LAZY : 0,
diff -Nru eglibc-2.15.17955/libc/include/link.h eglibc-2.15.17955.rasm/libc/include/link.h
--- eglibc-2.15.17955/libc/include/link.h	2012-04-07 20:58:55.000000000 +0100
+++ eglibc-2.15.17955.rasm/libc/include/link.h	2012-10-23 22:40:31.526900046 +0100
@@ -192,6 +192,9 @@
 						 during LD_TRACE_PRELINKING=1
 						 contains any DT_SYMBOLIC
 						 libraries.  */
+    unsigned int l_free_initfini:1; /* Nonzero if l_initfini can be
+                                       freed, ie. not allocated with
+                                       the dummy malloc in ld.so.  */
 
     /* Collected information about own RPATH directories.  */
     struct r_search_path_struct l_rpath_dirs;
@@ -240,9 +243,6 @@
 
     /* List of object in order of the init and fini calls.  */
     struct link_map **l_initfini;
-    /* The init and fini list generated at startup, saved when the
-       object is also loaded dynamically.  */
-    struct link_map **l_orig_initfini;
 
     /* List of the dependencies introduced through symbol binding.  */
     struct link_map_reldeps
